/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package enet;

public class ENetOutgoingCommand {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ENetOutgoingCommand(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ENetOutgoingCommand obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(ENetOutgoingCommand obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        enetJNI.delete_ENetOutgoingCommand(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setOutgoingCommandList(SWIGTYPE_p_ENetListNode value) {
    enetJNI.ENetOutgoingCommand_outgoingCommandList_set(swigCPtr, this, SWIGTYPE_p_ENetListNode.getCPtr(value));
  }

  public SWIGTYPE_p_ENetListNode getOutgoingCommandList() {
    return new SWIGTYPE_p_ENetListNode(enetJNI.ENetOutgoingCommand_outgoingCommandList_get(swigCPtr, this), true);
  }

  public void setReliableSequenceNumber(long value) {
    enetJNI.ENetOutgoingCommand_reliableSequenceNumber_set(swigCPtr, this, value);
  }

  public long getReliableSequenceNumber() {
    return enetJNI.ENetOutgoingCommand_reliableSequenceNumber_get(swigCPtr, this);
  }

  public void setUnreliableSequenceNumber(long value) {
    enetJNI.ENetOutgoingCommand_unreliableSequenceNumber_set(swigCPtr, this, value);
  }

  public long getUnreliableSequenceNumber() {
    return enetJNI.ENetOutgoingCommand_unreliableSequenceNumber_get(swigCPtr, this);
  }

  public void setSentTime(long value) {
    enetJNI.ENetOutgoingCommand_sentTime_set(swigCPtr, this, value);
  }

  public long getSentTime() {
    return enetJNI.ENetOutgoingCommand_sentTime_get(swigCPtr, this);
  }

  public void setRoundTripTimeout(long value) {
    enetJNI.ENetOutgoingCommand_roundTripTimeout_set(swigCPtr, this, value);
  }

  public long getRoundTripTimeout() {
    return enetJNI.ENetOutgoingCommand_roundTripTimeout_get(swigCPtr, this);
  }

  public void setQueueTime(long value) {
    enetJNI.ENetOutgoingCommand_queueTime_set(swigCPtr, this, value);
  }

  public long getQueueTime() {
    return enetJNI.ENetOutgoingCommand_queueTime_get(swigCPtr, this);
  }

  public void setFragmentOffset(long value) {
    enetJNI.ENetOutgoingCommand_fragmentOffset_set(swigCPtr, this, value);
  }

  public long getFragmentOffset() {
    return enetJNI.ENetOutgoingCommand_fragmentOffset_get(swigCPtr, this);
  }

  public void setFragmentLength(long value) {
    enetJNI.ENetOutgoingCommand_fragmentLength_set(swigCPtr, this, value);
  }

  public long getFragmentLength() {
    return enetJNI.ENetOutgoingCommand_fragmentLength_get(swigCPtr, this);
  }

  public void setSendAttempts(long value) {
    enetJNI.ENetOutgoingCommand_sendAttempts_set(swigCPtr, this, value);
  }

  public long getSendAttempts() {
    return enetJNI.ENetOutgoingCommand_sendAttempts_get(swigCPtr, this);
  }

  public void setCommand(SWIGTYPE_p_ENetProtocol value) {
    enetJNI.ENetOutgoingCommand_command_set(swigCPtr, this, SWIGTYPE_p_ENetProtocol.getCPtr(value));
  }

  public SWIGTYPE_p_ENetProtocol getCommand() {
    return new SWIGTYPE_p_ENetProtocol(enetJNI.ENetOutgoingCommand_command_get(swigCPtr, this), true);
  }

  public void setPacket(ENetPacket value) {
    enetJNI.ENetOutgoingCommand_packet_set(swigCPtr, this, ENetPacket.getCPtr(value), value);
  }

  public ENetPacket getPacket() {
    long cPtr = enetJNI.ENetOutgoingCommand_packet_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ENetPacket(cPtr, false);
  }

  public ENetOutgoingCommand() {
    this(enetJNI.new_ENetOutgoingCommand(), true);
  }

}
