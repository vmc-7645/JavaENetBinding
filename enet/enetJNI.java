/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package enet;

public class enetJNI {
  public final static native int ENET_VERSION_MAJOR_get();
  public final static native int ENET_VERSION_MINOR_get();
  public final static native int ENET_VERSION_PATCH_get();
  public final static native int ENET_VERSION_get();
  public final static native int ENET_SOCKET_TYPE_STREAM_get();
  public final static native int ENET_SOCKET_TYPE_DATAGRAM_get();
  public final static native int ENET_SOCKET_WAIT_NONE_get();
  public final static native int ENET_SOCKET_WAIT_SEND_get();
  public final static native int ENET_SOCKET_WAIT_RECEIVE_get();
  public final static native int ENET_SOCKET_WAIT_INTERRUPT_get();
  public final static native int ENET_SOCKOPT_NONBLOCK_get();
  public final static native int ENET_SOCKOPT_BROADCAST_get();
  public final static native int ENET_SOCKOPT_RCVBUF_get();
  public final static native int ENET_SOCKOPT_SNDBUF_get();
  public final static native int ENET_SOCKOPT_REUSEADDR_get();
  public final static native int ENET_SOCKOPT_RCVTIMEO_get();
  public final static native int ENET_SOCKOPT_SNDTIMEO_get();
  public final static native int ENET_SOCKOPT_ERROR_get();
  public final static native int ENET_SOCKOPT_NODELAY_get();
  public final static native int ENET_SOCKOPT_TTL_get();
  public final static native int ENET_SOCKET_SHUTDOWN_READ_get();
  public final static native int ENET_SOCKET_SHUTDOWN_WRITE_get();
  public final static native int ENET_SOCKET_SHUTDOWN_READ_WRITE_get();
  public final static native int ENET_HOST_ANY_get();
  public final static native long ENET_HOST_BROADCAST_get();
  public final static native int ENET_PORT_ANY_get();
  public final static native void ENetAddress_host_set(long jarg1, ENetAddress jarg1_, long jarg2);
  public final static native long ENetAddress_host_get(long jarg1, ENetAddress jarg1_);
  public final static native void ENetAddress_port_set(long jarg1, ENetAddress jarg1_, long jarg2);
  public final static native long ENetAddress_port_get(long jarg1, ENetAddress jarg1_);
  public final static native long new_ENetAddress();
  public final static native void delete_ENetAddress(long jarg1);
  public final static native int ENET_PACKET_FLAG_RELIABLE_get();
  public final static native int ENET_PACKET_FLAG_UNSEQUENCED_get();
  public final static native int ENET_PACKET_FLAG_NO_ALLOCATE_get();
  public final static native int ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT_get();
  public final static native int ENET_PACKET_FLAG_SENT_get();
  public final static native void ENetPacket_referenceCount_set(long jarg1, ENetPacket jarg1_, long jarg2);
  public final static native long ENetPacket_referenceCount_get(long jarg1, ENetPacket jarg1_);
  public final static native void ENetPacket_flags_set(long jarg1, ENetPacket jarg1_, long jarg2);
  public final static native long ENetPacket_flags_get(long jarg1, ENetPacket jarg1_);
  public final static native void ENetPacket_data_set(long jarg1, ENetPacket jarg1_, long jarg2);
  public final static native long ENetPacket_data_get(long jarg1, ENetPacket jarg1_);
  public final static native void ENetPacket_dataLength_set(long jarg1, ENetPacket jarg1_, long jarg2);
  public final static native long ENetPacket_dataLength_get(long jarg1, ENetPacket jarg1_);
  public final static native void ENetPacket_freeCallback_set(long jarg1, ENetPacket jarg1_, long jarg2);
  public final static native long ENetPacket_freeCallback_get(long jarg1, ENetPacket jarg1_);
  public final static native void ENetPacket_userData_set(long jarg1, ENetPacket jarg1_, long jarg2);
  public final static native long ENetPacket_userData_get(long jarg1, ENetPacket jarg1_);
  public final static native long new_ENetPacket();
  public final static native void delete_ENetPacket(long jarg1);
  public final static native void ENetAcknowledgement_acknowledgementList_set(long jarg1, ENetAcknowledgement jarg1_, long jarg2);
  public final static native long ENetAcknowledgement_acknowledgementList_get(long jarg1, ENetAcknowledgement jarg1_);
  public final static native void ENetAcknowledgement_sentTime_set(long jarg1, ENetAcknowledgement jarg1_, long jarg2);
  public final static native long ENetAcknowledgement_sentTime_get(long jarg1, ENetAcknowledgement jarg1_);
  public final static native void ENetAcknowledgement_command_set(long jarg1, ENetAcknowledgement jarg1_, long jarg2);
  public final static native long ENetAcknowledgement_command_get(long jarg1, ENetAcknowledgement jarg1_);
  public final static native long new_ENetAcknowledgement();
  public final static native void delete_ENetAcknowledgement(long jarg1);
  public final static native void ENetOutgoingCommand_outgoingCommandList_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_outgoingCommandList_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_reliableSequenceNumber_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_reliableSequenceNumber_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_unreliableSequenceNumber_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_unreliableSequenceNumber_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_sentTime_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_sentTime_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_roundTripTimeout_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_roundTripTimeout_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_queueTime_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_queueTime_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_fragmentOffset_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_fragmentOffset_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_fragmentLength_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_fragmentLength_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_sendAttempts_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_sendAttempts_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_command_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2);
  public final static native long ENetOutgoingCommand_command_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native void ENetOutgoingCommand_packet_set(long jarg1, ENetOutgoingCommand jarg1_, long jarg2, ENetPacket jarg2_);
  public final static native long ENetOutgoingCommand_packet_get(long jarg1, ENetOutgoingCommand jarg1_);
  public final static native long new_ENetOutgoingCommand();
  public final static native void delete_ENetOutgoingCommand(long jarg1);
  public final static native void ENetIncomingCommand_incomingCommandList_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2);
  public final static native long ENetIncomingCommand_incomingCommandList_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native void ENetIncomingCommand_reliableSequenceNumber_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2);
  public final static native long ENetIncomingCommand_reliableSequenceNumber_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native void ENetIncomingCommand_unreliableSequenceNumber_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2);
  public final static native long ENetIncomingCommand_unreliableSequenceNumber_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native void ENetIncomingCommand_command_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2);
  public final static native long ENetIncomingCommand_command_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native void ENetIncomingCommand_fragmentCount_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2);
  public final static native long ENetIncomingCommand_fragmentCount_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native void ENetIncomingCommand_fragmentsRemaining_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2);
  public final static native long ENetIncomingCommand_fragmentsRemaining_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native void ENetIncomingCommand_fragments_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2);
  public final static native long ENetIncomingCommand_fragments_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native void ENetIncomingCommand_packet_set(long jarg1, ENetIncomingCommand jarg1_, long jarg2, ENetPacket jarg2_);
  public final static native long ENetIncomingCommand_packet_get(long jarg1, ENetIncomingCommand jarg1_);
  public final static native long new_ENetIncomingCommand();
  public final static native void delete_ENetIncomingCommand(long jarg1);
  public final static native int ENET_PEER_STATE_DISCONNECTED_get();
  public final static native int ENET_PEER_STATE_CONNECTING_get();
  public final static native int ENET_PEER_STATE_ACKNOWLEDGING_CONNECT_get();
  public final static native int ENET_PEER_STATE_CONNECTION_PENDING_get();
  public final static native int ENET_PEER_STATE_CONNECTION_SUCCEEDED_get();
  public final static native int ENET_PEER_STATE_CONNECTED_get();
  public final static native int ENET_PEER_STATE_DISCONNECT_LATER_get();
  public final static native int ENET_PEER_STATE_DISCONNECTING_get();
  public final static native int ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT_get();
  public final static native int ENET_PEER_STATE_ZOMBIE_get();
  public final static native int ENET_HOST_RECEIVE_BUFFER_SIZE_get();
  public final static native int ENET_HOST_SEND_BUFFER_SIZE_get();
  public final static native int ENET_HOST_BANDWIDTH_THROTTLE_INTERVAL_get();
  public final static native int ENET_HOST_DEFAULT_MTU_get();
  public final static native int ENET_HOST_DEFAULT_MAXIMUM_PACKET_SIZE_get();
  public final static native int ENET_HOST_DEFAULT_MAXIMUM_WAITING_DATA_get();
  public final static native int ENET_PEER_DEFAULT_ROUND_TRIP_TIME_get();
  public final static native int ENET_PEER_DEFAULT_PACKET_THROTTLE_get();
  public final static native int ENET_PEER_PACKET_THROTTLE_SCALE_get();
  public final static native int ENET_PEER_PACKET_THROTTLE_COUNTER_get();
  public final static native int ENET_PEER_PACKET_THROTTLE_ACCELERATION_get();
  public final static native int ENET_PEER_PACKET_THROTTLE_DECELERATION_get();
  public final static native int ENET_PEER_PACKET_THROTTLE_INTERVAL_get();
  public final static native int ENET_PEER_PACKET_LOSS_SCALE_get();
  public final static native int ENET_PEER_PACKET_LOSS_INTERVAL_get();
  public final static native int ENET_PEER_WINDOW_SIZE_SCALE_get();
  public final static native int ENET_PEER_TIMEOUT_LIMIT_get();
  public final static native int ENET_PEER_TIMEOUT_MINIMUM_get();
  public final static native int ENET_PEER_TIMEOUT_MAXIMUM_get();
  public final static native int ENET_PEER_PING_INTERVAL_get();
  public final static native int ENET_PEER_UNSEQUENCED_WINDOWS_get();
  public final static native int ENET_PEER_UNSEQUENCED_WINDOW_SIZE_get();
  public final static native int ENET_PEER_FREE_UNSEQUENCED_WINDOWS_get();
  public final static native int ENET_PEER_RELIABLE_WINDOWS_get();
  public final static native int ENET_PEER_RELIABLE_WINDOW_SIZE_get();
  public final static native int ENET_PEER_FREE_RELIABLE_WINDOWS_get();
  public final static native void ENetChannel_outgoingReliableSequenceNumber_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_outgoingReliableSequenceNumber_get(long jarg1, ENetChannel jarg1_);
  public final static native void ENetChannel_outgoingUnreliableSequenceNumber_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_outgoingUnreliableSequenceNumber_get(long jarg1, ENetChannel jarg1_);
  public final static native void ENetChannel_usedReliableWindows_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_usedReliableWindows_get(long jarg1, ENetChannel jarg1_);
  public final static native void ENetChannel_reliableWindows_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_reliableWindows_get(long jarg1, ENetChannel jarg1_);
  public final static native void ENetChannel_incomingReliableSequenceNumber_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_incomingReliableSequenceNumber_get(long jarg1, ENetChannel jarg1_);
  public final static native void ENetChannel_incomingUnreliableSequenceNumber_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_incomingUnreliableSequenceNumber_get(long jarg1, ENetChannel jarg1_);
  public final static native void ENetChannel_incomingReliableCommands_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_incomingReliableCommands_get(long jarg1, ENetChannel jarg1_);
  public final static native void ENetChannel_incomingUnreliableCommands_set(long jarg1, ENetChannel jarg1_, long jarg2);
  public final static native long ENetChannel_incomingUnreliableCommands_get(long jarg1, ENetChannel jarg1_);
  public final static native long new_ENetChannel();
  public final static native void delete_ENetChannel(long jarg1);
  public final static native int ENET_PEER_FLAG_NEEDS_DISPATCH_get();
  public final static native int ENET_PEER_FLAG_CONTINUE_SENDING_get();
  public final static native void ENetPeer_dispatchList_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_dispatchList_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_host_set(long jarg1, ENetPeer jarg1_, long jarg2, ENetHost jarg2_);
  public final static native long ENetPeer_host_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingPeerID_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingPeerID_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_incomingPeerID_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_incomingPeerID_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_connectID_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_connectID_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingSessionID_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingSessionID_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_incomingSessionID_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_incomingSessionID_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_address_set(long jarg1, ENetPeer jarg1_, long jarg2, ENetAddress jarg2_);
  public final static native long ENetPeer_address_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_data_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_data_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_state_set(long jarg1, ENetPeer jarg1_, int jarg2);
  public final static native int ENetPeer_state_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_channels_set(long jarg1, ENetPeer jarg1_, long jarg2, ENetChannel jarg2_);
  public final static native long ENetPeer_channels_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_channelCount_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_channelCount_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_incomingBandwidth_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_incomingBandwidth_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingBandwidth_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingBandwidth_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_incomingBandwidthThrottleEpoch_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_incomingBandwidthThrottleEpoch_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingBandwidthThrottleEpoch_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingBandwidthThrottleEpoch_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_incomingDataTotal_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_incomingDataTotal_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingDataTotal_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingDataTotal_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_lastSendTime_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_lastSendTime_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_lastReceiveTime_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_lastReceiveTime_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_nextTimeout_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_nextTimeout_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_earliestTimeout_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_earliestTimeout_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetLossEpoch_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetLossEpoch_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetsSent_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetsSent_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetsLost_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetsLost_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetLoss_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetLoss_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetLossVariance_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetLossVariance_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetThrottle_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetThrottle_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetThrottleLimit_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetThrottleLimit_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetThrottleCounter_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetThrottleCounter_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetThrottleEpoch_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetThrottleEpoch_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetThrottleAcceleration_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetThrottleAcceleration_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetThrottleDeceleration_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetThrottleDeceleration_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_packetThrottleInterval_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_packetThrottleInterval_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_pingInterval_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_pingInterval_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_timeoutLimit_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_timeoutLimit_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_timeoutMinimum_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_timeoutMinimum_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_timeoutMaximum_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_timeoutMaximum_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_lastRoundTripTime_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_lastRoundTripTime_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_lowestRoundTripTime_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_lowestRoundTripTime_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_lastRoundTripTimeVariance_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_lastRoundTripTimeVariance_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_highestRoundTripTimeVariance_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_highestRoundTripTimeVariance_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_roundTripTime_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_roundTripTime_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_roundTripTimeVariance_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_roundTripTimeVariance_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_mtu_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_mtu_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_windowSize_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_windowSize_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_reliableDataInTransit_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_reliableDataInTransit_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingReliableSequenceNumber_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingReliableSequenceNumber_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_acknowledgements_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_acknowledgements_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_sentReliableCommands_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_sentReliableCommands_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingSendReliableCommands_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingSendReliableCommands_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingCommands_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingCommands_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_dispatchedCommands_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_dispatchedCommands_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_flags_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_flags_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_reserved_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_reserved_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_incomingUnsequencedGroup_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_incomingUnsequencedGroup_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_outgoingUnsequencedGroup_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_outgoingUnsequencedGroup_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_unsequencedWindow_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_unsequencedWindow_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_eventData_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_eventData_get(long jarg1, ENetPeer jarg1_);
  public final static native void ENetPeer_totalWaitingData_set(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native long ENetPeer_totalWaitingData_get(long jarg1, ENetPeer jarg1_);
  public final static native long new_ENetPeer();
  public final static native void delete_ENetPeer(long jarg1);
  public final static native void ENetCompressor_context_set(long jarg1, ENetCompressor jarg1_, long jarg2);
  public final static native long ENetCompressor_context_get(long jarg1, ENetCompressor jarg1_);
  public final static native void ENetCompressor_compress_set(long jarg1, ENetCompressor jarg1_, long jarg2);
  public final static native long ENetCompressor_compress_get(long jarg1, ENetCompressor jarg1_);
  public final static native void ENetCompressor_decompress_set(long jarg1, ENetCompressor jarg1_, long jarg2);
  public final static native long ENetCompressor_decompress_get(long jarg1, ENetCompressor jarg1_);
  public final static native void ENetCompressor_destroy_set(long jarg1, ENetCompressor jarg1_, long jarg2);
  public final static native long ENetCompressor_destroy_get(long jarg1, ENetCompressor jarg1_);
  public final static native long new_ENetCompressor();
  public final static native void delete_ENetCompressor(long jarg1);
  public final static native void ENetHost_socket_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_socket_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_address_set(long jarg1, ENetHost jarg1_, long jarg2, ENetAddress jarg2_);
  public final static native long ENetHost_address_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_incomingBandwidth_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_incomingBandwidth_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_outgoingBandwidth_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_outgoingBandwidth_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_bandwidthThrottleEpoch_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_bandwidthThrottleEpoch_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_mtu_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_mtu_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_randomSeed_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_randomSeed_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_recalculateBandwidthLimits_set(long jarg1, ENetHost jarg1_, int jarg2);
  public final static native int ENetHost_recalculateBandwidthLimits_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_peers_set(long jarg1, ENetHost jarg1_, long jarg2, ENetPeer jarg2_);
  public final static native long ENetHost_peers_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_peerCount_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_peerCount_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_channelLimit_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_channelLimit_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_serviceTime_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_serviceTime_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_dispatchQueue_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_dispatchQueue_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_totalQueued_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_totalQueued_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_packetSize_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_packetSize_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_headerFlags_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_headerFlags_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_commands_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_commands_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_commandCount_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_commandCount_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_buffers_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_buffers_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_bufferCount_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_bufferCount_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_checksum_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_checksum_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_compressor_set(long jarg1, ENetHost jarg1_, long jarg2, ENetCompressor jarg2_);
  public final static native long ENetHost_compressor_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_packetData_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_packetData_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_receivedAddress_set(long jarg1, ENetHost jarg1_, long jarg2, ENetAddress jarg2_);
  public final static native long ENetHost_receivedAddress_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_receivedData_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_receivedData_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_receivedDataLength_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_receivedDataLength_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_totalSentData_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_totalSentData_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_totalSentPackets_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_totalSentPackets_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_totalReceivedData_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_totalReceivedData_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_totalReceivedPackets_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_totalReceivedPackets_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_intercept_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_intercept_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_connectedPeers_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_connectedPeers_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_bandwidthLimitedPeers_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_bandwidthLimitedPeers_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_duplicatePeers_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_duplicatePeers_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_maximumPacketSize_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_maximumPacketSize_get(long jarg1, ENetHost jarg1_);
  public final static native void ENetHost_maximumWaitingData_set(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native long ENetHost_maximumWaitingData_get(long jarg1, ENetHost jarg1_);
  public final static native long new_ENetHost();
  public final static native void delete_ENetHost(long jarg1);
  public final static native int ENET_EVENT_TYPE_NONE_get();
  public final static native int ENET_EVENT_TYPE_CONNECT_get();
  public final static native int ENET_EVENT_TYPE_DISCONNECT_get();
  public final static native int ENET_EVENT_TYPE_RECEIVE_get();
  public final static native void ENetEvent_type_set(long jarg1, ENetEvent jarg1_, int jarg2);
  public final static native int ENetEvent_type_get(long jarg1, ENetEvent jarg1_);
  public final static native void ENetEvent_peer_set(long jarg1, ENetEvent jarg1_, long jarg2, ENetPeer jarg2_);
  public final static native long ENetEvent_peer_get(long jarg1, ENetEvent jarg1_);
  public final static native void ENetEvent_channelID_set(long jarg1, ENetEvent jarg1_, long jarg2);
  public final static native long ENetEvent_channelID_get(long jarg1, ENetEvent jarg1_);
  public final static native void ENetEvent_data_set(long jarg1, ENetEvent jarg1_, long jarg2);
  public final static native long ENetEvent_data_get(long jarg1, ENetEvent jarg1_);
  public final static native void ENetEvent_packet_set(long jarg1, ENetEvent jarg1_, long jarg2, ENetPacket jarg2_);
  public final static native long ENetEvent_packet_get(long jarg1, ENetEvent jarg1_);
  public final static native long new_ENetEvent();
  public final static native void delete_ENetEvent(long jarg1);
  public final static native int enet_initialize();
  public final static native int enet_initialize_with_callbacks(long jarg1, long jarg2);
  public final static native void enet_deinitialize();
  public final static native long enet_linked_version();
  public final static native long enet_time_get();
  public final static native void enet_time_set(long jarg1);
  public final static native long enet_socket_create(int jarg1);
  public final static native int enet_socket_bind(long jarg1, long jarg2, ENetAddress jarg2_);
  public final static native int enet_socket_get_address(long jarg1, long jarg2, ENetAddress jarg2_);
  public final static native int enet_socket_listen(long jarg1, int jarg2);
  public final static native long enet_socket_accept(long jarg1, long jarg2, ENetAddress jarg2_);
  public final static native int enet_socket_connect(long jarg1, long jarg2, ENetAddress jarg2_);
  public final static native int enet_socket_send(long jarg1, long jarg2, ENetAddress jarg2_, long jarg3, long jarg4);
  public final static native int enet_socket_receive(long jarg1, long jarg2, ENetAddress jarg2_, long jarg3, long jarg4);
  public final static native int enet_socket_wait(long jarg1, long jarg2, long jarg3);
  public final static native int enet_socket_set_option(long jarg1, int jarg2, int jarg3);
  public final static native int enet_socket_get_option(long jarg1, int jarg2, long jarg3);
  public final static native int enet_socket_shutdown(long jarg1, int jarg2);
  public final static native void enet_socket_destroy(long jarg1);
  public final static native int enet_socketset_select(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int enet_address_set_host_ip(long jarg1, ENetAddress jarg1_, String jarg2);
  public final static native int enet_address_set_host(long jarg1, ENetAddress jarg1_, String jarg2);
  public final static native int enet_address_get_host_ip(long jarg1, ENetAddress jarg1_, String jarg2, long jarg3);
  public final static native int enet_address_get_host(long jarg1, ENetAddress jarg1_, String jarg2, long jarg3);
  public final static native long enet_packet_create(long jarg1, long jarg2, long jarg3);
  public final static native void enet_packet_destroy(long jarg1, ENetPacket jarg1_);
  public final static native int enet_packet_resize(long jarg1, ENetPacket jarg1_, long jarg2);
  public final static native long enet_crc32(long jarg1, long jarg2);
  public final static native long enet_host_create(long jarg1, ENetAddress jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void enet_host_destroy(long jarg1, ENetHost jarg1_);
  public final static native long enet_host_connect(long jarg1, ENetHost jarg1_, long jarg2, ENetAddress jarg2_, long jarg3, long jarg4);
  public final static native int enet_host_check_events(long jarg1, ENetHost jarg1_, long jarg2, ENetEvent jarg2_);
  public final static native int enet_host_service(long jarg1, ENetHost jarg1_, long jarg2, ENetEvent jarg2_, long jarg3);
  public final static native void enet_host_flush(long jarg1, ENetHost jarg1_);
  public final static native void enet_host_broadcast(long jarg1, ENetHost jarg1_, long jarg2, long jarg3, ENetPacket jarg3_);
  public final static native void enet_host_compress(long jarg1, ENetHost jarg1_, long jarg2, ENetCompressor jarg2_);
  public final static native int enet_host_compress_with_range_coder(long jarg1, ENetHost jarg1_);
  public final static native void enet_host_channel_limit(long jarg1, ENetHost jarg1_, long jarg2);
  public final static native void enet_host_bandwidth_limit(long jarg1, ENetHost jarg1_, long jarg2, long jarg3);
  public final static native void enet_host_bandwidth_throttle(long jarg1, ENetHost jarg1_);
  public final static native long enet_host_random_seed();
  public final static native long enet_host_random(long jarg1, ENetHost jarg1_);
  public final static native int enet_peer_send(long jarg1, ENetPeer jarg1_, long jarg2, long jarg3, ENetPacket jarg3_);
  public final static native long enet_peer_receive(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native void enet_peer_ping(long jarg1, ENetPeer jarg1_);
  public final static native void enet_peer_ping_interval(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native void enet_peer_timeout(long jarg1, ENetPeer jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void enet_peer_reset(long jarg1, ENetPeer jarg1_);
  public final static native void enet_peer_disconnect(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native void enet_peer_disconnect_now(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native void enet_peer_disconnect_later(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native void enet_peer_throttle_configure(long jarg1, ENetPeer jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int enet_peer_throttle(long jarg1, ENetPeer jarg1_, long jarg2);
  public final static native void enet_peer_reset_queues(long jarg1, ENetPeer jarg1_);
  public final static native int enet_peer_has_outgoing_commands(long jarg1, ENetPeer jarg1_);
  public final static native void enet_peer_setup_outgoing_command(long jarg1, ENetPeer jarg1_, long jarg2, ENetOutgoingCommand jarg2_);
  public final static native long enet_peer_queue_outgoing_command(long jarg1, ENetPeer jarg1_, long jarg2, long jarg3, ENetPacket jarg3_, long jarg4, long jarg5);
  public final static native long enet_peer_queue_incoming_command(long jarg1, ENetPeer jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long enet_peer_queue_acknowledgement(long jarg1, ENetPeer jarg1_, long jarg2, long jarg3);
  public final static native void enet_peer_dispatch_incoming_unreliable_commands(long jarg1, ENetPeer jarg1_, long jarg2, ENetChannel jarg2_, long jarg3, ENetIncomingCommand jarg3_);
  public final static native void enet_peer_dispatch_incoming_reliable_commands(long jarg1, ENetPeer jarg1_, long jarg2, ENetChannel jarg2_, long jarg3, ENetIncomingCommand jarg3_);
  public final static native void enet_peer_on_connect(long jarg1, ENetPeer jarg1_);
  public final static native void enet_peer_on_disconnect(long jarg1, ENetPeer jarg1_);
  public final static native long enet_range_coder_create();
  public final static native void enet_range_coder_destroy(long jarg1);
  public final static native long enet_range_coder_compress(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long enet_range_coder_decompress(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long enet_protocol_command_size(long jarg1);
}
